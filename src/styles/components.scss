/* Modal Component Styles */
/* Implementation styles for modal components using design tokens */

@use "./tokens" as tokens;

/* Backdrop - Enhanced with better blur effect */
.modalBackdrop {
  position: fixed;
  inset: 0;
  background: var(--modal-backdrop-bg);
  backdrop-filter: blur(var(--modal-blur-amount));
  -webkit-backdrop-filter: blur(var(--modal-blur-amount)); /* Safari support */
  display: flex;
  align-items: center;
  justify-content: center;
  padding: var(--modal-padding);

  /* Remove padding when backdrop contains full screen modal */
  &:has(.modal--full) {
    padding: 0;
    align-items: stretch;
    justify-content: stretch;
  }

  /* Ensure mobile modals are not affected by centering */
  @media (max-width: #{tokens.$modal-breakpoint-mobile}) {
    padding: 0;
    align-items: flex-start;
    justify-content: flex-start;
  }

  /* Animation states */
  &[data-state="opening"] {
    opacity: 0;
    backdrop-filter: blur(0px);
    -webkit-backdrop-filter: blur(0px);
  }

  &[data-state="open"] {
    opacity: 1;
    backdrop-filter: blur(var(--modal-blur-amount));
    -webkit-backdrop-filter: blur(var(--modal-blur-amount));
  }

  &[data-state="closing"] {
    opacity: 0;
    backdrop-filter: blur(0px);
    -webkit-backdrop-filter: blur(0px);
  }

  /* Apply transition when animated */
  transition: opacity var(--modal-transition-duration)
      var(--modal-transition-easing),
    backdrop-filter var(--modal-transition-duration)
      var(--modal-transition-easing),
    -webkit-backdrop-filter var(--modal-transition-duration) var(--modal-transition-easing);
}

/* Modal Content Container - Enhanced with beautiful styling */
.modal {
  background: var(--modal-bg);
  color: var(--modal-color);
  border-radius: var(--modal-radius);
  box-shadow: var(--modal-shadow);
  max-width: 100%;
  overflow: hidden;
  position: relative; /* Changed from fixed to relative to work with backdrop flexbox */
  outline: none;
  border: 1px solid var(--modal-border-accent-color);
  display: flex;
  flex-direction: column; /* Enable flexbox layout for header/body/footer */
  min-height: 0; /* Allow flex children to shrink */
  font-family: var(--modal-font-family);

  input,
  textarea {
    box-sizing: border-box;
  }

  /* No need for manual positioning - backdrop centers us */

  /* Subtle gradient overlay for depth */
  &::before {
    content: "";
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    height: 1px;
    background: linear-gradient(
      90deg,
      transparent,
      var(--modal-gradient-highlight),
      transparent
    );
    pointer-events: none;
  }

  /* Animation states for modal content */
  &[data-state="opening"] {
    opacity: 0;
    transform: scale(var(--modal-animation-scale))
      translateY(var(--modal-animation-translate-y));
  }

  &[data-state="open"] {
    opacity: 1;
    transform: scale(1) translateY(0);
  }

  &[data-state="closing"] {
    opacity: 0;
    transform: scale(var(--modal-animation-scale))
      translateY(var(--modal-animation-translate-y));
  }

  /* Apply transition when animated */
  &--animated {
    transition: opacity var(--modal-transition-duration)
        var(--modal-transition-easing),
      transform var(--modal-transition-duration) var(--modal-transition-easing);
  }

  /* Size variants */
  &--auto {
    width: auto;
    min-width: var(--modal-min-width);
    max-height: 90vh; /* Allow modal to grow but constrain height for scrolling */
  }

  &--md {
    width: var(--modal-width-md);
    max-height: 90vh; /* Allow modal to grow but constrain height for scrolling */
  }

  &--full {
    width: var(--modal-width-full);
    height: 100vh;
    border-radius: 0;
    max-width: none;
    max-height: none;

    &[data-state="opening"] {
      opacity: 0;
      transform: none;
    }

    &[data-state="open"] {
      opacity: 1;
      transform: none;
    }

    &[data-state="closing"] {
      opacity: 0;
      transform: none;
    }
  }

  /* Responsive behavior - Mobile fullscreen as per specs */
  @media (max-width: #{tokens.$modal-breakpoint-mobile}) {
    &--auto,
    &--md {
      width: 100vw;
      height: 100vh;
      max-width: 100vw;
      max-height: 100dvh; // fix for mobile viewport height
      margin: 0;
      border-radius: 0;
      display: flex;
      flex-direction: column;

      &[data-state="opening"] {
        opacity: 0;
        transform: none;
      }

      &[data-state="open"] {
        opacity: 1;
        transform: none;
      }

      &[data-state="closing"] {
        opacity: 0;
        transform: none;
      }
    }
  }
}

/* Modal Subcomponents - Enhanced with beautiful design */
.modalHeader {
  display: grid;
  grid-template-columns: 1fr auto; /* Content area + close button */
  gap: var(--modal-spacing-sm);
  align-items: start;
  padding: var(--modal-spacing-md) var(--modal-spacing-lg)
    var(--modal-spacing-sm);
  border-bottom: var(--modal-border);
  background: linear-gradient(
    180deg,
    var(--modal-bg) 0%,
    var(--modal-surface-subtle) 100%
  );
  min-height: var(
    --modal-min-height-header
  ); /* Reduced for more compact header */
  flex-shrink: 0; /* Prevent header from shrinking */

  /* Compact mobile spacing */
  @media (max-width: #{tokens.$modal-breakpoint-mobile}) {
    padding: var(--modal-spacing-sm) var(--modal-spacing-md)
      var(--modal-spacing-xs);
    gap: var(--modal-spacing-xs);
    min-height: var(--modal-min-height-header-mobile);
  }

  &:has(.modalTitle:only-child) {
    min-height: 40px;

    @media (max-width: #{tokens.$modal-breakpoint-mobile}) {
      min-height: 32px;
    }
  }

  /* Enhanced layout for title + close button only */
  &:not(:has(.modalDescription)) {
    padding-bottom: var(--modal-spacing-sm);

    @media (max-width: #{tokens.$modal-breakpoint-mobile}) {
      padding-bottom: var(--modal-spacing-xs);
    }
  }
}

/* Header content area - contains title and description */
.modalHeaderContent {
  display: flex;
  flex-direction: column;
  gap: 0.25rem; /* Compact spacing between title and description */
  min-width: 0; /* Allow text to wrap properly */
}

.modalTitle {
  margin: 0;
  font-size: var(--modal-font-size-title);
  font-weight: var(--modal-font-weight-title);
  line-height: var(--modal-line-height-title);
  color: var(--modal-color);
  letter-spacing: -0.025em;

  /* Optimize for mobile */
  @media (max-width: #{tokens.$modal-breakpoint-mobile}) {
    font-size: var(
      --modal-font-size-title-mobile
    ); /* Slightly smaller on mobile */
    line-height: 1.2;
  }
}

.modalDescription {
  margin: 0;
  color: var(--modal-text-secondary);
  font-size: var(--modal-font-size-description);
  line-height: var(--modal-line-height-description);
  font-weight: 400;

  /* Mobile optimizations */
  @media (max-width: #{tokens.$modal-breakpoint-mobile}) {
    font-size: var(--modal-font-size-description-mobile);
    line-height: 1.4;
  }
}

.modalBody {
  padding: var(--modal-spacing-lg) var(--modal-spacing-xl);
  overflow-y: auto;
  overflow-x: hidden; /* Prevent horizontal scroll */
  flex: 1; /* Allow body to expand and handle overflow */
  min-height: 0; /* Important: allows flex child to shrink below content size */

  /* Ensure proper scrolling container */
  -webkit-overflow-scrolling: touch; /* Smooth scrolling on iOS */
  overscroll-behavior-y: contain; /* Prevent body scroll when at modal boundaries */

  /* Enhanced content type support */
  word-wrap: break-word; /* Handle long words gracefully */
  overflow-wrap: break-word; /* Modern property for word breaking */

  /* Support for various content types */
  img,
  video,
  iframe,
  canvas,
  svg {
    max-width: 100%; /* Ensure media doesn't exceed modal bounds */
    height: auto; /* Maintain aspect ratios */
  }

  /* Code block support */
  pre {
    overflow-x: auto; /* Allow horizontal scroll in code blocks */
    max-width: 100%;
    white-space: pre-wrap; /* Allow line wrapping in pre elements */
    word-break: break-all; /* Break long lines if needed */
  }

  /* Table support with horizontal scroll */
  table {
    max-width: 100%;
    width: 100%;
    border-collapse: collapse;
  }

  /* Container for wide content that needs its own scroll */
  .modal-wide-content {
    overflow-x: auto;
    max-width: 100%;
  }

  /* Mobile fullscreen adjustments */
  @media (max-width: #{tokens.$modal-breakpoint-mobile}) {
    .modal--auto &,
    .modal--md & {
      max-height: none; /* Remove height limit on mobile fullscreen */
      flex: 1; /* Take all available space */
      padding: var(--modal-spacing-md); /* Reduce padding on mobile */
    }

    .modal--full & {
      max-height: none;
      padding: var(--modal-spacing-lg);
    }
  }

  /* Enhanced scrollbar styling with better visibility */
  &::-webkit-scrollbar {
    width: var(
      --modal-scrollbar-width
    ); /* Slightly wider for better usability */
  }

  &::-webkit-scrollbar-track {
    background: var(--modal-scrollbar-track);
    border-radius: var(--modal-radius-sm);
    margin: var(--modal-scrollbar-margin); /* Add margin to track */
  }

  &::-webkit-scrollbar-thumb {
    background: var(--modal-scrollbar-thumb);
    border-radius: var(--modal-radius-sm);
    border: 1px solid var(--modal-scrollbar-border); /* Subtle border for definition */

    &:hover {
      background: var(--modal-scrollbar-thumb-hover);
    }

    &:active {
      background: var(--modal-scrollbar-thumb-active);
    }
  }

  /* Firefox scrollbar styling */
  scrollbar-width: thin;
  scrollbar-color: var(--modal-scrollbar-thumb) var(--modal-scrollbar-track);
}

.modalFooter {
  display: flex;
  align-items: center;
  justify-content: flex-end;
  gap: var(--modal-spacing-sm);
  padding: var(--modal-spacing-md) var(--modal-spacing-lg);
  border-top: var(--modal-border);
  background: linear-gradient(
    180deg,
    var(--modal-surface-subtle) 0%,
    var(--modal-bg) 100%
  );
  min-height: var(--modal-min-height-footer); /* Reduced from 64px */
  flex-shrink: 0; /* Prevent footer from shrinking */

  /* Mobile optimizations */
  @media (max-width: #{tokens.$modal-breakpoint-mobile}) {
    /* Compact mobile spacing */
    padding: var(--modal-spacing-sm) var(--modal-spacing-md);
    min-height: var(
      --modal-min-height-footer-mobile
    ); /* More compact on mobile */
    gap: var(--modal-spacing-xs);

    /* Mobile fullscreen modals */
    .modal--auto &,
    .modal--md & {
      /* Add safe area padding for iOS devices */
      padding-bottom: max(var(--modal-spacing-sm), env(safe-area-inset-bottom));

      /* Stack buttons on mobile when multiple buttons */
      &:has(button + button), /* Multiple buttons */
      &:has([role="button"] + [role="button"]) {
        flex-direction: column-reverse; /* Primary action on bottom */
        align-items: stretch;
        gap: var(--modal-spacing-sm);

        /* Buttons take full width on mobile */
        button,
        [role="button"] {
          width: 100%;
          min-height: var(
            --modal-touch-target
          ); /* iOS touch target guideline */
          padding: var(--modal-spacing-md) var(--modal-spacing-lg);
          font-size: var(--modal-font-size-button);
          font-weight: 500;
        }
      }
    }

    /* Full screen modals get bottom spacing */
    .modal--full & {
      padding-bottom: max(var(--modal-spacing-md), env(safe-area-inset-bottom));
    }
  }

  /* Very small mobile devices */
  @media (max-width: #{tokens.$modal-breakpoint-small}) {
    padding: var(--modal-spacing-xs) var(--modal-spacing-sm);
    min-height: 40px;

    .modal--auto &,
    .modal--md & {
      padding-bottom: max(var(--modal-spacing-xs), env(safe-area-inset-bottom));
    }
  }
}

.modalClose {
  background: var(--modal-close-bg);
  border: none;
  cursor: pointer;
  padding: var(--modal-spacing-sm);
  border-radius: var(--modal-radius-md);
  color: var(--modal-close-text);
  transition: all 0.15s cubic-bezier(0.4, 0, 0.2, 1);
  width: var(--modal-close-size);
  height: var(--modal-close-size);
  display: flex;
  align-items: center;
  justify-content: center;
  font-size: var(--modal-font-size-close);
  line-height: 1;
  flex-shrink: 0;

  /* Improved positioning in header */
  .modalHeader & {
    margin-top: -2px; /* Optical alignment with title */
    margin-right: -4px; /* Account for visual weight */
  }

  /* Mobile optimizations */
  @media (max-width: #{tokens.$modal-breakpoint-mobile}) {
    width: var(--modal-close-size-mobile);
    height: var(--modal-close-size-mobile);
    font-size: var(--modal-font-size-close-mobile);

    .modalHeader & {
      margin-top: -1px;
      margin-right: -2px;
    }
  }

  &:hover {
    background: var(--modal-close-hover-bg);
    color: var(--modal-close-hover-text);
    transform: scale(1.05);
  }

  &:focus {
    outline: var(--modal-outline-width) solid var(--modal-border-focus-color);
    outline-offset: var(--modal-outline-offset);
    background: var(--modal-interactive-focus);
  }

  &:active {
    transform: scale(0.95);
    transition-duration: 0.1s;
  }
}

/* Modal Button Component */
.modalButton {
  /* Base button styles */
  display: inline-flex;
  align-items: center;
  justify-content: center;
  gap: 0.5rem;
  font-family: var(--modal-font-family);
  font-weight: 500;
  border: 1px solid;
  border-radius: var(--modal-button-radius);
  cursor: pointer;
  transition: all 0.2s ease;
  text-decoration: none;
  white-space: nowrap;
  user-select: none;

  /* Focus styles */
  &:focus {
    outline: var(--modal-outline-width) solid var(--modal-button-focus-color);
    outline-offset: var(--modal-outline-offset);
  }

  /* Size variants */
  &--small {
    padding: 0.375rem 0.75rem;
    font-size: 0.875rem;
    line-height: 1.25;
  }

  &--medium {
    padding: 0.5rem 1rem;
    font-size: 1rem;
    line-height: 1.5;
  }

  &--large {
    padding: 0.75rem 1.5rem;
    font-size: 1.125rem;
    line-height: 1.5;
  }

  /* Variant styles */
  &--primary {
    background: var(--modal-button-primary-bg);
    color: var(--modal-button-primary-color);
    border-color: var(--modal-button-primary-border);

    &:hover:not(.modalButton--disabled) {
      background: var(--modal-button-primary-hover-bg);
      border-color: var(--modal-button-primary-hover-border);
    }

    &:active:not(.modalButton--disabled) {
      background: var(--modal-button-primary-active-bg);
      border-color: var(--modal-button-primary-active-border);
    }
  }

  &--secondary {
    background: var(--modal-button-secondary-bg);
    color: var(--modal-button-secondary-color);
    border-color: var(--modal-button-secondary-border);

    &:hover:not(.modalButton--disabled) {
      background: var(--modal-button-secondary-hover-bg);
      border-color: var(--modal-button-secondary-hover-border);
    }

    &:active:not(.modalButton--disabled) {
      background: var(--modal-button-secondary-active-bg);
      border-color: var(--modal-button-secondary-active-border);
    }
  }

  &--danger {
    background: var(--modal-button-danger-bg);
    color: var(--modal-button-danger-color);
    border-color: var(--modal-button-danger-border);

    &:hover:not(.modalButton--disabled) {
      background: var(--modal-button-danger-hover-bg);
      border-color: var(--modal-button-danger-hover-border);
    }

    &:active:not(.modalButton--disabled) {
      background: var(--modal-button-danger-active-bg);
      border-color: var(--modal-button-danger-active-border);
    }
  }

  &--success {
    background: var(--modal-button-success-bg);
    color: var(--modal-button-success-color);
    border-color: var(--modal-button-success-border);

    &:hover:not(.modalButton--disabled) {
      background: var(--modal-button-success-hover-bg);
      border-color: var(--modal-button-success-hover-border);
    }

    &:active:not(.modalButton--disabled) {
      background: var(--modal-button-success-active-bg);
      border-color: var(--modal-button-success-active-border);
    }
  }

  &--warning {
    background: var(--modal-button-warning-bg);
    color: var(--modal-button-warning-color);
    border-color: var(--modal-button-warning-border);

    &:hover:not(.modalButton--disabled) {
      background: var(--modal-button-warning-hover-bg);
      border-color: var(--modal-button-warning-hover-border);
    }

    &:active:not(.modalButton--disabled) {
      background: var(--modal-button-warning-active-bg);
      border-color: var(--modal-button-warning-active-border);
    }
  }

  /* Disabled state */
  &--disabled {
    opacity: 0.6;
    cursor: not-allowed;
    pointer-events: none;
  }

  /* Loading state */
  &--loading {
    position: relative;
  }

  &__spinner {
    display: inline-flex;
    align-items: center;
    justify-content: center;
  }

  &__spinnerIcon {
    width: 1em;
    height: 1em;
    animation: modalButtonSpin 1s linear infinite;
  }

  &__content {
    display: flex;
    align-items: center;
    gap: 0.5rem;

    &--loading {
      opacity: 0.7;
    }
  }
}

/* Spinner animation */
@keyframes modalButtonSpin {
  0% {
    transform: rotate(0deg);
    stroke-dashoffset: 32;
  }
  50% {
    stroke-dashoffset: 0;
  }
  100% {
    transform: rotate(360deg);
    stroke-dashoffset: -32;
  }
}

/* Note: Modal animations now use data-state attributes with CSS transitions
   instead of keyframes for better control and exit animations */
